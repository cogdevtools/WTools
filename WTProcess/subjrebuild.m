function subjrebuild()

%subjrebuild.m
%Created by Eugenio Parise
%CDC CEU 2012
%Function to rebuild subj.m and subgrand.m afer importing and
%processing new subjects. It only works from GUI.
%
%Usage:
%
%subjrebuild();
%

if ~exist('inputgui.m','file')    
    fprintf(2,'\nPlease, start EEGLAB first!!!\n');
    fprintf('\n');
    return    
end

if ispc
    sla='\';
else
    sla='/';
end

try
    PROJECTPATH=evalin('base','PROJECTPATH');
    cd (PROJECTPATH);
    addpath(strcat(PROJECTPATH,sla,'pop_cfg'));
catch
    fprintf(2,'\nPlease, create a new project or open an existing one.\n');
    fprintf('\n');
    return
end

if ~exist('subj.m','file') || ~exist('subjgrand.m','file')    
    fprintf(2,'\nPlease, click on ''Import EEG'' and ''Wavelet Transform'' first!!!\n');
    fprintf('\n');
    return    
end

defaultanswer={1,1};

parameters = { ...
    { 'style' 'text'       'string'     'Rebuild the following cfg files:' } ...
    { 'style' 'text'       'string'     '' } ...
    { 'style' 'text'       'string'     '' } ...
    { 'style' 'checkbox'   'string'     'Imported subjects (subj.m)'        'value'      defaultanswer{1,1} } ...
    { 'style' 'checkbox'   'string'     'Included subjects (subjgrand.m)'   'value'      defaultanswer{1,2} } };

geometry = { [1 0.5] [1] [1] [1] };
[answer userdat strhalt] = inputgui( 'geometry', geometry, 'uilist', parameters,'title', 'Rebuild subjects cfg files');

if ~strcmp(strhalt,'retuninginputui')
    return;
end

subjflag=answer{1,1};
subjgrandflag=answer{1,2};

%REBUILD subj.m
if subjflag
    
    %Select subjects from the Export folder interactively via GUI
    
    subjectsvector = { ...
        '01' '02' '03' '04' '05' '06' '07' '08' '09' '10' '11' '12' '13' '14' '15' ...
        '16' '17' '18' '19' '20' '21' '22' '23' '24' '25' '26' '27' '28' '29' '30' ...
        '31' '32' '33' '34' '35' '36' '37' '38' '39' '40' '41' '42' '43' '44' '45' ...
        '46' '47' '48' '49' '50' '51' '52' '53' '54' '55' '56' '57' '58' '59' '60' ...
        '61' '62' '63' '64' '65' '66' '67' '68' '69' '70' '71' '72' '73' '74' '75' ...
        '76' '77' '78' '79' '80' '81' '82' '83' '84' '85' '86' '87' '88' '89' '90' ...
        '91' '92' '93' '94' '95' '96' '97' '98' '99' '100' '101' '102' '103' '104' '105' ...
        '106' '107' '108' '109' '110' '111' '112' '113' '114' '115' '116' '117' '118' '119' '120' };
    
    %Build list of imported subjects from the existing folders names
    %(e.g. '01' '03')
    folderslist=dir;
    a=cell(1,size(folderslist,1));
    for i=1:size(folderslist,1)
        a{1,i}=folderslist(i,1).name;
    end
    
    for i=1:length(subjectsvector)
        b=strfind(a,char(subjectsvector(i)));
        c=find(~cellfun(@isempty,b));
        if ~isempty(c)
            c=c(1,1); %Avoid duplicate values (e.g. 100 to 109 when searching 10)
            importedsubj{1,i}=a{c};
        end
    end
    
    emptyCells = cellfun(@isempty,importedsubj);
    importedsubj(emptyCells) = [];
    
    [subjlist, ok] = listdlg('PromptString','Select imported subjects:','SelectionMode','multiple','ListString',importedsubj);
    
    if ~ok
        return %quit on cancel button
    end
    
    subjectsvector = importedsubj(subjlist);
    
    %Save the subjects config file in the pop_cfg folder
    pop_cfgfile = strcat(PROJECTPATH,sla,'pop_cfg',sla,'subj.m');
    fid = fopen(pop_cfgfile, 'wt'); %Overwrite preexisting file with the same name
    fprintf(fid, '%%Generated by subjrebuild.m\r');
    fprintf(fid, 'subjects = { ');
    for i=1:length(subjectsvector)
        fprintf(fid, ' ''%s'' ',char(subjectsvector(i)));
    end
    fprintf(fid, ' }; ');
    fclose(fid);
    
    fprintf('\n');
    fprintf('subj.m successfully saved in the pop_cfg folder\n');
    
end

%REBUILD subjgrand.m
if subjgrandflag
    
    if subjflag
        subjects = subjectsvector;
    else
        subj;
    end
        
    %Build list of transformed subjects from the existing folders names
    %(e.g. '01' '03')
    folderslist=dir;
    a=cell(1,size(folderslist,1));
    for i=1:size(folderslist,1)
        a{1,i}=folderslist(i,1).name;
    end
    
    for i=1:length(subjects)
        b=strfind(a,char(subjects(i)));
        c=find(~cellfun(@isempty,b));
        if ~isempty(c)
            c=c(1,1); %Avoid douplicate values (e.g. 100 to 109 when searching 10)
            transformedsubj{1,i}=a{c};
        end
    end
    
    emptyCells = cellfun(@isempty,transformedsubj);
    transformedsubj(emptyCells) = [];
    
    [subjlist, ok] = listdlg('PromptString','Select transformed subjects:','SelectionMode','multiple','ListString',transformedsubj);
    
    if ~ok
        return %quit on cancel button
    end
    
    subjects = subjects(subjlist);
    
    %Save the processed subjects list in the subjgrand.m file in the
    %pop_cfg folder.
    pop_cfgfile = strcat(PROJECTPATH,sla,'pop_cfg',sla,'subjgrand.m');
    fid = fopen(pop_cfgfile, 'wt'); %Overwrite preexisting file with the same name
    fprintf(fid, '%%Generated by subjrebuild.m\r');
    fprintf(fid, 'subjects = { ');
    for i=1:length(subjects)
        fprintf(fid, ' ''%s'' ',char(subjects(i)));
    end
    fprintf(fid, ' };');
    fclose(fid);
    
    %Assign the variable subjects to the caller workspace (grand.m,
    %avrretrieve.m). Avoid bug of wrong list because subjgrand.m does not
    %update the variable subjects when called by the caller function.
    assignin('caller','subjects',subjects);
    
    fprintf('\n');
    fprintf('subjgrand.m successfully saved in the pop_cfg folder\n');
    
end

rehash;

fprintf('\nDone!!!\n');
fprintf('\n');